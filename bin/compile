#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

# fail fast
set -e

BIN_DIR=$(dirname $0)
BUILD_DIR=$1
CACHE_DIR=$2
LP_DIR=`cd $(dirname $0); cd ..; pwd`

# include .files when moving things around
shopt -s dotglob

cd $BUILD_DIR

# update config files
cp $LP_DIR/conf/apache2.conf .
#cp $LP_DIR/conf/php.ini /etc/php5/apache2/
#cp $LP_DIR/conf/php-fpm.conf php/etc

# enable apache modules
a2enmod proxy proxy_wstunnel

# Create Bootscript
cat >>boot.sh <<EOF
# runtime permissions
chmod 755 -R /app
# Check if docs directory exists, if not copy template and set permissions
if [ -d /app/docs ]; then
  chmod 777 -R /app/docs
fi
#for var in \`env|cut -f1 -d=\`; do
#echo "PassEnv \$var" >> /app/apache/conf/httpd.conf;
#done
#touch /app/apache/logs/error_log
#touch /app/apache/logs/access_log
tail -F /var/log/apache2/error.log &
tail -F /var/log/apache2/access.log &

#export LD_LIBRARY_PATH=/app/php/ext
#export PHP_INI_SCAN_DIR=/app
LD_LIBRARY_PATH=/lib:/usr/lib:/usr/local/lib

# Uncomment if you want to try to get fpm working
#echo "Launching php"
#exec php-fpm -p "/app/php"

echo "Launching nodejs"
exec node /app/api/server.js

echo "Launching apache"
exec /usr/sbin/apache2 -f /app/apache2.conf -DNO_DETACH

EOF

chmod +x boot.sh

# clean the cache
rm -rf $CACHE_DIR/*
